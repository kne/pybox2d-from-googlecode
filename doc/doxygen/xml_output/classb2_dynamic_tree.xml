<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.2">
  <compounddef id="classb2_dynamic_tree" kind="class" prot="public">
    <compoundname>b2DynamicTree</compoundname>
    <includes local="no">b2DynamicTree.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classb2_dynamic_tree_1a336705eb2059313288e73de8da59b1a9" prot="private" static="no" mutable="no">
        <type>int32</type>
        <definition>int32 b2DynamicTree::m_root</definition>
        <argsstring></argsstring>
        <name>m_root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="125" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classb2_dynamic_tree_1ab0781a42bbd7ede33f17377993af1576" prot="private" static="no" mutable="no">
        <type><ref refid="structb2_dynamic_tree_node" kindref="compound">b2DynamicTreeNode</ref> *</type>
        <definition>b2DynamicTreeNode* b2DynamicTree::m_nodes</definition>
        <argsstring></argsstring>
        <name>m_nodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="127" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classb2_dynamic_tree_1a7532c57eae4d8e04920dc8c9b14665af" prot="private" static="no" mutable="no">
        <type>int32</type>
        <definition>int32 b2DynamicTree::m_nodeCount</definition>
        <argsstring></argsstring>
        <name>m_nodeCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="128" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classb2_dynamic_tree_1a5b54249f52aee1de21b862ac060eccf2" prot="private" static="no" mutable="no">
        <type>int32</type>
        <definition>int32 b2DynamicTree::m_nodeCapacity</definition>
        <argsstring></argsstring>
        <name>m_nodeCapacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="129" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classb2_dynamic_tree_1abacc1866e2f5e5fb5e95d69592a4193a" prot="private" static="no" mutable="no">
        <type>int32</type>
        <definition>int32 b2DynamicTree::m_freeList</definition>
        <argsstring></argsstring>
        <name>m_freeList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="131" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classb2_dynamic_tree_1ab68ffe92575c26e5d3099d8ed050e188" prot="private" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 b2DynamicTree::m_path</definition>
        <argsstring></argsstring>
        <name>m_path</name>
        <briefdescription>
<para>This is used incrementally traverse the tree for re-balancing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="134" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classb2_dynamic_tree_1a4657cf0c95a523da397094e5e6943f17" prot="private" static="no" mutable="no">
        <type>int32</type>
        <definition>int32 b2DynamicTree::m_insertionCount</definition>
        <argsstring></argsstring>
        <name>m_insertionCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="136" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classb2_dynamic_tree_1a8af64cf6a1566fa4c5b5c9683bd937d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>b2DynamicTree::b2DynamicTree</definition>
        <argsstring>()</argsstring>
        <name>b2DynamicTree</name>
        <briefdescription>
<para>Constructing the tree initializes the node pool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="65" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.cpp" bodystart="24" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1a9060565fc63b4dd87d9560775c076786" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>b2DynamicTree::~b2DynamicTree</definition>
        <argsstring>()</argsstring>
        <name>~b2DynamicTree</name>
        <briefdescription>
<para>Destroy the tree, freeing the node pool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="68" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.cpp" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1ae44676f12977dada46037da47fc7ffbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 b2DynamicTree::CreateProxy</definition>
        <argsstring>(const b2AABB &amp;aabb, void *userData)</argsstring>
        <name>CreateProxy</name>
        <param>
          <type>const <ref refid="structb2_a_a_b_b" kindref="compound">b2AABB</ref> &amp;</type>
          <declname>aabb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
<para>Create a proxy. Provide a tight fitting AABB and a userData pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="71" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.cpp" bodystart="101" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1a62aa451e7d7fe029818dd05f76ea9cdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void b2DynamicTree::DestroyProxy</definition>
        <argsstring>(int32 proxyId)</argsstring>
        <name>DestroyProxy</name>
        <param>
          <type>int32</type>
          <declname>proxyId</declname>
        </param>
        <briefdescription>
<para>Destroy a proxy. This asserts if the id is invalid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="74" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.cpp" bodystart="117" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1a7748252811f3c575015931399cbe4daa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool b2DynamicTree::MoveProxy</definition>
        <argsstring>(int32 proxyId, const b2AABB &amp;aabb1, const b2Vec2 &amp;displacement)</argsstring>
        <name>MoveProxy</name>
        <param>
          <type>int32</type>
          <declname>proxyId</declname>
        </param>
        <param>
          <type>const <ref refid="structb2_a_a_b_b" kindref="compound">b2AABB</ref> &amp;</type>
          <declname>aabb1</declname>
        </param>
        <param>
          <type>const <ref refid="structb2_vec2" kindref="compound">b2Vec2</ref> &amp;</type>
          <declname>displacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move a proxy with a swepted AABB. If the proxy has moved outside of its fattened AABB, then the proxy is removed from the tree and re-inserted. Otherwise the function returns immediately. <simplesect kind="return"><para>true if the proxy was re-inserted. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="80" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.cpp" bodystart="126" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1a3511d409a2d8a0dfee715e919837d6bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void b2DynamicTree::Rebalance</definition>
        <argsstring>(int32 iterations)</argsstring>
        <name>Rebalance</name>
        <param>
          <type>int32</type>
          <declname>iterations</declname>
        </param>
        <briefdescription>
<para>Perform some iterations to re-balance the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="83" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.cpp" bodystart="346" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1a44ab57dce3c42b0a5847a64e489a71ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * b2DynamicTree::GetUserData</definition>
        <argsstring>(int32 proxyId) const </argsstring>
        <name>GetUserData</name>
        <param>
          <type>int32</type>
          <declname>proxyId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get proxy user data. <simplesect kind="return"><para>the proxy user data or 0 if the id is invalid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="87" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" bodystart="139" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1adf4676b1c34a57b4451bcbeaebe65687" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structb2_a_a_b_b" kindref="compound">b2AABB</ref> &amp;</type>
        <definition>const b2AABB &amp; b2DynamicTree::GetFatAABB</definition>
        <argsstring>(int32 proxyId) const </argsstring>
        <name>GetFatAABB</name>
        <param>
          <type>int32</type>
          <declname>proxyId</declname>
        </param>
        <briefdescription>
<para>Get the fat AABB for a proxy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="90" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1a2b2ebfdb68cf8ee392c0f6a154f2b927" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 b2DynamicTree::ComputeHeight</definition>
        <argsstring>() const </argsstring>
        <name>ComputeHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the height of the binary tree in O(N) time. Should not be called often. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="94" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.cpp" bodystart="395" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1a7cc59d9f7d12a8470b951eb10e7c3eb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void b2DynamicTree::Query</definition>
        <argsstring>(T *callback, const b2AABB &amp;aabb) const </argsstring>
        <name>Query</name>
        <param>
          <type>T *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>const <ref refid="structb2_a_a_b_b" kindref="compound">b2AABB</ref> &amp;</type>
          <declname>aabb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Query an AABB for overlapping proxies. The callback class is called for each proxy that overlaps the supplied AABB. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="99" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" bodystart="152" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1a96ee30c849183e5e3b5f2d5f9a848302" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void b2DynamicTree::RayCast</definition>
        <argsstring>(T *callback, const b2RayCastInput &amp;input) const </argsstring>
        <name>RayCast</name>
        <param>
          <type>T *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>const <ref refid="structb2_ray_cast_input" kindref="compound">b2RayCastInput</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ray-cast against the proxies in the tree. This relies on the callback to perform a exact ray-cast in the case were the proxy contains a shape. The callback also performs the any collision filtering. This has performance roughly equal to k * log(n), where k is the number of collisions and n is the number of proxies in the tree. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>the ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>a callback class that is called for each proxy that is hit by the ray. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="109" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" bodystart="187" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1abfac96c615b08406cba3e53b39800f1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void b2DynamicTree::Validate</definition>
        <argsstring>() const </argsstring>
        <name>Validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="111" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.cpp" bodystart="423" bodyend="426"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classb2_dynamic_tree_1a975879e87073cfddbc6a988f0d426553" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 b2DynamicTree::AllocateNode</definition>
        <argsstring>()</argsstring>
        <name>AllocateNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="115" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.cpp" bodystart="53" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1a87f1f5d9f4ff97b420300b6ee642ec92" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void b2DynamicTree::FreeNode</definition>
        <argsstring>(int32 node)</argsstring>
        <name>FreeNode</name>
        <param>
          <type>int32</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="116" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.cpp" bodystart="89" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1a068fd3f29465fb6aaabbfdd6a70e6058" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void b2DynamicTree::InsertLeaf</definition>
        <argsstring>(int32 node)</argsstring>
        <name>InsertLeaf</name>
        <param>
          <type>int32</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="118" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.cpp" bodystart="172" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1a79bde2ff0a8b53b236865fdffebbd030" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void b2DynamicTree::RemoveLeaf</definition>
        <argsstring>(int32 node)</argsstring>
        <name>RemoveLeaf</name>
        <param>
          <type>int32</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="119" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.cpp" bodystart="291" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1af9e3afb3381e4e4985e2dc7c42de078a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 b2DynamicTree::ComputeHeight</definition>
        <argsstring>(int32 nodeId) const </argsstring>
        <name>ComputeHeight</name>
        <param>
          <type>int32</type>
          <declname>nodeId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="121" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.cpp" bodystart="381" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classb2_dynamic_tree_1a347e6a418bfec48dde08193a94be3055" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 b2DynamicTree::CountLeaves</definition>
        <argsstring>(int32 nodeId) const </argsstring>
        <name>CountLeaves</name>
        <param>
          <type>int32</type>
          <declname>nodeId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="123" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.cpp" bodystart="400" bodyend="421"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A dynamic tree arranges data in a binary tree to accelerate queries such as volume queries and ray casts. Leafs are proxies with an AABB. In the tree we expand the proxy AABB by b2_fatAABBFactor so that the proxy AABB is bigger than the client object. This allows the client object to move by small amounts without triggering a tree update.</para><para>Nodes are pooled and relocatable, so we use node indices rather than pointers. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="1216">
        <label>b2DynamicTree</label>
        <link refid="classb2_dynamic_tree"/>
        <childnode refid="1217" relation="usage">
          <edgelabel>m_nodes</edgelabel>
        </childnode>
      </node>
      <node id="1217">
        <label>b2DynamicTreeNode</label>
        <link refid="structb2_dynamic_tree_node"/>
        <childnode refid="1218" relation="usage">
          <edgelabel>aabb</edgelabel>
        </childnode>
      </node>
      <node id="1219">
        <label>b2Vec2</label>
        <link refid="structb2_vec2"/>
      </node>
      <node id="1218">
        <label>b2AABB</label>
        <link refid="structb2_a_a_b_b"/>
        <childnode refid="1219" relation="usage">
          <edgelabel>lowerBound</edgelabel>
          <edgelabel>upperBound</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" line="61" bodyfile="D:/pybox2d/Box2D/Collision/b2DynamicTree.h" bodystart="60" bodyend="137"/>
    <listofallmembers>
      <member refid="classb2_dynamic_tree_1a975879e87073cfddbc6a988f0d426553" prot="private" virt="non-virtual"><scope>b2DynamicTree</scope><name>AllocateNode</name></member>
      <member refid="classb2_dynamic_tree_1a8af64cf6a1566fa4c5b5c9683bd937d9" prot="public" virt="non-virtual"><scope>b2DynamicTree</scope><name>b2DynamicTree</name></member>
      <member refid="classb2_dynamic_tree_1a2b2ebfdb68cf8ee392c0f6a154f2b927" prot="public" virt="non-virtual"><scope>b2DynamicTree</scope><name>ComputeHeight</name></member>
      <member refid="classb2_dynamic_tree_1af9e3afb3381e4e4985e2dc7c42de078a" prot="private" virt="non-virtual"><scope>b2DynamicTree</scope><name>ComputeHeight</name></member>
      <member refid="classb2_dynamic_tree_1a347e6a418bfec48dde08193a94be3055" prot="private" virt="non-virtual"><scope>b2DynamicTree</scope><name>CountLeaves</name></member>
      <member refid="classb2_dynamic_tree_1ae44676f12977dada46037da47fc7ffbf" prot="public" virt="non-virtual"><scope>b2DynamicTree</scope><name>CreateProxy</name></member>
      <member refid="classb2_dynamic_tree_1a62aa451e7d7fe029818dd05f76ea9cdc" prot="public" virt="non-virtual"><scope>b2DynamicTree</scope><name>DestroyProxy</name></member>
      <member refid="classb2_dynamic_tree_1a87f1f5d9f4ff97b420300b6ee642ec92" prot="private" virt="non-virtual"><scope>b2DynamicTree</scope><name>FreeNode</name></member>
      <member refid="classb2_dynamic_tree_1adf4676b1c34a57b4451bcbeaebe65687" prot="public" virt="non-virtual"><scope>b2DynamicTree</scope><name>GetFatAABB</name></member>
      <member refid="classb2_dynamic_tree_1a44ab57dce3c42b0a5847a64e489a71ce" prot="public" virt="non-virtual"><scope>b2DynamicTree</scope><name>GetUserData</name></member>
      <member refid="classb2_dynamic_tree_1a068fd3f29465fb6aaabbfdd6a70e6058" prot="private" virt="non-virtual"><scope>b2DynamicTree</scope><name>InsertLeaf</name></member>
      <member refid="classb2_dynamic_tree_1abacc1866e2f5e5fb5e95d69592a4193a" prot="private" virt="non-virtual"><scope>b2DynamicTree</scope><name>m_freeList</name></member>
      <member refid="classb2_dynamic_tree_1a4657cf0c95a523da397094e5e6943f17" prot="private" virt="non-virtual"><scope>b2DynamicTree</scope><name>m_insertionCount</name></member>
      <member refid="classb2_dynamic_tree_1a5b54249f52aee1de21b862ac060eccf2" prot="private" virt="non-virtual"><scope>b2DynamicTree</scope><name>m_nodeCapacity</name></member>
      <member refid="classb2_dynamic_tree_1a7532c57eae4d8e04920dc8c9b14665af" prot="private" virt="non-virtual"><scope>b2DynamicTree</scope><name>m_nodeCount</name></member>
      <member refid="classb2_dynamic_tree_1ab0781a42bbd7ede33f17377993af1576" prot="private" virt="non-virtual"><scope>b2DynamicTree</scope><name>m_nodes</name></member>
      <member refid="classb2_dynamic_tree_1ab68ffe92575c26e5d3099d8ed050e188" prot="private" virt="non-virtual"><scope>b2DynamicTree</scope><name>m_path</name></member>
      <member refid="classb2_dynamic_tree_1a336705eb2059313288e73de8da59b1a9" prot="private" virt="non-virtual"><scope>b2DynamicTree</scope><name>m_root</name></member>
      <member refid="classb2_dynamic_tree_1a7748252811f3c575015931399cbe4daa" prot="public" virt="non-virtual"><scope>b2DynamicTree</scope><name>MoveProxy</name></member>
      <member refid="classb2_dynamic_tree_1a7cc59d9f7d12a8470b951eb10e7c3eb7" prot="public" virt="non-virtual"><scope>b2DynamicTree</scope><name>Query</name></member>
      <member refid="classb2_dynamic_tree_1a96ee30c849183e5e3b5f2d5f9a848302" prot="public" virt="non-virtual"><scope>b2DynamicTree</scope><name>RayCast</name></member>
      <member refid="classb2_dynamic_tree_1a3511d409a2d8a0dfee715e919837d6bd" prot="public" virt="non-virtual"><scope>b2DynamicTree</scope><name>Rebalance</name></member>
      <member refid="classb2_dynamic_tree_1a79bde2ff0a8b53b236865fdffebbd030" prot="private" virt="non-virtual"><scope>b2DynamicTree</scope><name>RemoveLeaf</name></member>
      <member refid="classb2_dynamic_tree_1abfac96c615b08406cba3e53b39800f1c" prot="public" virt="non-virtual"><scope>b2DynamicTree</scope><name>Validate</name></member>
      <member refid="classb2_dynamic_tree_1a9060565fc63b4dd87d9560775c076786" prot="public" virt="non-virtual"><scope>b2DynamicTree</scope><name>~b2DynamicTree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
