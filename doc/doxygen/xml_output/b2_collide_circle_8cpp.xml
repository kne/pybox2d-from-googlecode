<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.2">
  <compounddef id="b2_collide_circle_8cpp" kind="file">
    <compoundname>b2CollideCircle.cpp</compoundname>
    <includes refid="b2_collision_8h" local="no">Box2D/Collision/b2Collision.h</includes>
    <includes refid="b2_circle_shape_8h" local="no">Box2D/Collision/Shapes/b2CircleShape.h</includes>
    <includes refid="b2_polygon_shape_8h" local="no">Box2D/Collision/Shapes/b2PolygonShape.h</includes>
    <incdepgraph>
      <node id="26">
        <label>Box2D/Collision/b2CollideCircle.cpp</label>
        <link refid="b2CollideCircle.cpp"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>Box2D/Collision/b2Collision.h</label>
        <link refid="b2_collision_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>climits</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="b2_collide_circle_8cpp_1ab8a1bf2c6a9453307466f4870c1fa333" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void b2CollideCircles</definition>
        <argsstring>(b2Manifold *manifold, const b2CircleShape *circleA, const b2Transform &amp;xfA, const b2CircleShape *circleB, const b2Transform &amp;xfB)</argsstring>
        <name>b2CollideCircles</name>
        <param>
          <type><ref refid="structb2_manifold" kindref="compound">b2Manifold</ref> *</type>
          <declname>manifold</declname>
        </param>
        <param>
          <type>const <ref refid="classb2_circle_shape" kindref="compound">b2CircleShape</ref> *</type>
          <declname>circleA</declname>
        </param>
        <param>
          <type>const <ref refid="structb2_transform" kindref="compound">b2Transform</ref> &amp;</type>
          <declname>xfA</declname>
        </param>
        <param>
          <type>const <ref refid="classb2_circle_shape" kindref="compound">b2CircleShape</ref> *</type>
          <declname>circleB</declname>
        </param>
        <param>
          <type>const <ref refid="structb2_transform" kindref="compound">b2Transform</ref> &amp;</type>
          <declname>xfB</declname>
        </param>
        <briefdescription>
<para>Compute the collision manifold between two circles. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2CollideCircle.cpp" line="27" bodyfile="D:/pybox2d/Box2D/Collision/b2CollideCircle.cpp" bodystart="23" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="b2_collide_circle_8cpp_1a30da13c857596fbefa40b47c3e1e78d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void b2CollidePolygonAndCircle</definition>
        <argsstring>(b2Manifold *manifold, const b2PolygonShape *polygonA, const b2Transform &amp;xfA, const b2CircleShape *circleB, const b2Transform &amp;xfB)</argsstring>
        <name>b2CollidePolygonAndCircle</name>
        <param>
          <type><ref refid="structb2_manifold" kindref="compound">b2Manifold</ref> *</type>
          <declname>manifold</declname>
        </param>
        <param>
          <type>const <ref refid="classb2_polygon_shape" kindref="compound">b2PolygonShape</ref> *</type>
          <declname>polygonA</declname>
        </param>
        <param>
          <type>const <ref refid="structb2_transform" kindref="compound">b2Transform</ref> &amp;</type>
          <declname>xfA</declname>
        </param>
        <param>
          <type>const <ref refid="classb2_circle_shape" kindref="compound">b2CircleShape</ref> *</type>
          <declname>circleB</declname>
        </param>
        <param>
          <type>const <ref refid="structb2_transform" kindref="compound">b2Transform</ref> &amp;</type>
          <declname>xfB</declname>
        </param>
        <briefdescription>
<para>Compute the collision manifold between a polygon and a circle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/pybox2d/Box2D/Collision/b2CollideCircle.cpp" line="55" bodyfile="D:/pybox2d/Box2D/Collision/b2CollideCircle.cpp" bodystart="51" bodyend="154"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>(c)<sp/>2007-2009<sp/>Erin<sp/>Catto<sp/>http://www.gphysics.com</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="b2_collision_8h" kindref="compound">Box2D/Collision/b2Collision.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Box2D/Collision/Shapes/b2CircleShape.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Box2D/Collision/Shapes/b2PolygonShape.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>b2CollideCircles(</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structb2_manifold" kindref="compound">b2Manifold</ref>*<sp/>manifold,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classb2_circle_shape" kindref="compound" tooltip="A circle shape.">b2CircleShape</ref>*<sp/>circleA,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_transform" kindref="compound">b2Transform</ref>&amp;<sp/>xfA,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classb2_circle_shape" kindref="compound" tooltip="A circle shape.">b2CircleShape</ref>*<sp/>circleB,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_transform" kindref="compound">b2Transform</ref>&amp;<sp/>xfB)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1abf59ff6fa36bed34b0242ad54951a696" kindref="member" tooltip="the number of manifold points">pointCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structb2_vec2" kindref="compound" tooltip="A 2D column vector.">b2Vec2</ref><sp/>pA<sp/>=<sp/>b2Mul(xfA,<sp/>circleA-&gt;<ref refid="classb2_circle_shape_1a190705618b2e65f636f1dc03c63640ff" kindref="member" tooltip="Position.">m_p</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structb2_vec2" kindref="compound" tooltip="A 2D column vector.">b2Vec2</ref><sp/>pB<sp/>=<sp/>b2Mul(xfB,<sp/>circleB-&gt;<ref refid="classb2_circle_shape_1a190705618b2e65f636f1dc03c63640ff" kindref="member" tooltip="Position.">m_p</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structb2_vec2" kindref="compound" tooltip="A 2D column vector.">b2Vec2</ref><sp/>d<sp/>=<sp/>pB<sp/>-<sp/>pA;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>distSqr<sp/>=<sp/>b2Dot(d,<sp/>d);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>rA<sp/>=<sp/>circleA-&gt;m_radius,<sp/>rB<sp/>=<sp/>circleB-&gt;m_radius;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>radius<sp/>=<sp/>rA<sp/>+<sp/>rB;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distSqr<sp/>&gt;<sp/>radius<sp/>*<sp/>radius)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;type<sp/>=<sp/>b2Manifold::e_circles;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1a8825cea31b27dbbaf22c13c3070870d5" kindref="member" tooltip="usage depends on manifold type">localPoint</ref><sp/>=<sp/>circleA-&gt;<ref refid="classb2_circle_shape_1a190705618b2e65f636f1dc03c63640ff" kindref="member" tooltip="Position.">m_p</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1a3604e9fef2a03347c5649c71a9fd4c79" kindref="member" tooltip="not use for Type::e_points">localNormal</ref>.<ref refid="structb2_vec2_1a5c6cbe27cfb29c6dbb29b9a3285b88d0" kindref="member" tooltip="Set this vector to all zeros.">SetZero</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1abf59ff6fa36bed34b0242ad54951a696" kindref="member" tooltip="the number of manifold points">pointCount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1ab8021128e9792cc7391a8804ea02173d" kindref="member" tooltip="the points of contact">points</ref>[0].<ref refid="structb2_manifold_point_1ab3616990e7d1644deeeb691246094bfa" kindref="member" tooltip="usage depends on manifold type">localPoint</ref><sp/>=<sp/>circleB-&gt;<ref refid="classb2_circle_shape_1a190705618b2e65f636f1dc03c63640ff" kindref="member" tooltip="Position.">m_p</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1ab8021128e9792cc7391a8804ea02173d" kindref="member" tooltip="the points of contact">points</ref>[0].<ref refid="structb2_manifold_point_1afa7ec272b2b27abe129540f8fbe57fc5" kindref="member" tooltip="uniquely identifies a contact point between two shapes">id</ref>.<ref refid="unionb2_contact_i_d_1a04c04f8fdcb799b33552d01b3aa3f245" kindref="member" tooltip="Used to quickly compare contact ids.">key</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>b2CollidePolygonAndCircle(</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structb2_manifold" kindref="compound">b2Manifold</ref>*<sp/>manifold,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classb2_polygon_shape" kindref="compound">b2PolygonShape</ref>*<sp/>polygonA,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_transform" kindref="compound">b2Transform</ref>&amp;<sp/>xfA,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classb2_circle_shape" kindref="compound" tooltip="A circle shape.">b2CircleShape</ref>*<sp/>circleB,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_transform" kindref="compound">b2Transform</ref>&amp;<sp/>xfB)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1abf59ff6fa36bed34b0242ad54951a696" kindref="member" tooltip="the number of manifold points">pointCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>circle<sp/>position<sp/>in<sp/>the<sp/>frame<sp/>of<sp/>the<sp/>polygon.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structb2_vec2" kindref="compound" tooltip="A 2D column vector.">b2Vec2</ref><sp/>c<sp/>=<sp/>b2Mul(xfB,<sp/>circleB-&gt;<ref refid="classb2_circle_shape_1a190705618b2e65f636f1dc03c63640ff" kindref="member" tooltip="Position.">m_p</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structb2_vec2" kindref="compound" tooltip="A 2D column vector.">b2Vec2</ref><sp/>cLocal<sp/>=<sp/>b2MulT(xfA,<sp/>c);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>min<sp/>separating<sp/>edge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>normalIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>separation<sp/>=<sp/>-b2_maxFloat;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>radius<sp/>=<sp/>polygonA-&gt;m_radius<sp/>+<sp/>circleB-&gt;m_radius;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>vertexCount<sp/>=<sp/>polygonA-&gt;m_vertexCount;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_vec2" kindref="compound" tooltip="A 2D column vector.">b2Vec2</ref>*<sp/>vertices<sp/>=<sp/>polygonA-&gt;m_vertices;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_vec2" kindref="compound" tooltip="A 2D column vector.">b2Vec2</ref>*<sp/>normals<sp/>=<sp/>polygonA-&gt;m_normals;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int32<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vertexCount;<sp/>++i)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>s<sp/>=<sp/>b2Dot(normals[i],<sp/>cLocal<sp/>-<sp/>vertices[i]);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&gt;<sp/>radius)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Early<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&gt;<sp/>separation)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>separation<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalIndex<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertices<sp/>that<sp/>subtend<sp/>the<sp/>incident<sp/>face.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>vertIndex1<sp/>=<sp/>normalIndex;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>vertIndex2<sp/>=<sp/>vertIndex1<sp/>+<sp/>1<sp/>&lt;<sp/>vertexCount<sp/>?<sp/>vertIndex1<sp/>+<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structb2_vec2" kindref="compound" tooltip="A 2D column vector.">b2Vec2</ref><sp/>v1<sp/>=<sp/>vertices[vertIndex1];</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structb2_vec2" kindref="compound" tooltip="A 2D column vector.">b2Vec2</ref><sp/>v2<sp/>=<sp/>vertices[vertIndex2];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>center<sp/>is<sp/>inside<sp/>the<sp/>polygon<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(separation<sp/>&lt;<sp/>b2_epsilon)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1abf59ff6fa36bed34b0242ad54951a696" kindref="member" tooltip="the number of manifold points">pointCount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;type<sp/>=<sp/>b2Manifold::e_faceA;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1a3604e9fef2a03347c5649c71a9fd4c79" kindref="member" tooltip="not use for Type::e_points">localNormal</ref><sp/>=<sp/>normals[normalIndex];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1a8825cea31b27dbbaf22c13c3070870d5" kindref="member" tooltip="usage depends on manifold type">localPoint</ref><sp/>=<sp/>0.5f<sp/>*<sp/>(v1<sp/>+<sp/>v2);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1ab8021128e9792cc7391a8804ea02173d" kindref="member" tooltip="the points of contact">points</ref>[0].<ref refid="structb2_manifold_point_1ab3616990e7d1644deeeb691246094bfa" kindref="member" tooltip="usage depends on manifold type">localPoint</ref><sp/>=<sp/>circleB-&gt;<ref refid="classb2_circle_shape_1a190705618b2e65f636f1dc03c63640ff" kindref="member" tooltip="Position.">m_p</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1ab8021128e9792cc7391a8804ea02173d" kindref="member" tooltip="the points of contact">points</ref>[0].<ref refid="structb2_manifold_point_1afa7ec272b2b27abe129540f8fbe57fc5" kindref="member" tooltip="uniquely identifies a contact point between two shapes">id</ref>.<ref refid="unionb2_contact_i_d_1a04c04f8fdcb799b33552d01b3aa3f245" kindref="member" tooltip="Used to quickly compare contact ids.">key</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>barycentric<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>u1<sp/>=<sp/>b2Dot(cLocal<sp/>-<sp/>v1,<sp/>v2<sp/>-<sp/>v1);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>u2<sp/>=<sp/>b2Dot(cLocal<sp/>-<sp/>v2,<sp/>v1<sp/>-<sp/>v2);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u1<sp/>&lt;=<sp/>0.0f)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b2DistanceSquared(cLocal,<sp/>v1)<sp/>&gt;<sp/>radius<sp/>*<sp/>radius)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1abf59ff6fa36bed34b0242ad54951a696" kindref="member" tooltip="the number of manifold points">pointCount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;type<sp/>=<sp/>b2Manifold::e_faceA;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1a3604e9fef2a03347c5649c71a9fd4c79" kindref="member" tooltip="not use for Type::e_points">localNormal</ref><sp/>=<sp/>cLocal<sp/>-<sp/>v1;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1a3604e9fef2a03347c5649c71a9fd4c79" kindref="member" tooltip="not use for Type::e_points">localNormal</ref>.<ref refid="structb2_vec2_1adda78c92f318fe53d8a53f9b5cfd8e41" kindref="member" tooltip="Convert this vector into a unit vector. Returns the length.">Normalize</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1a8825cea31b27dbbaf22c13c3070870d5" kindref="member" tooltip="usage depends on manifold type">localPoint</ref><sp/>=<sp/>v1;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1ab8021128e9792cc7391a8804ea02173d" kindref="member" tooltip="the points of contact">points</ref>[0].<ref refid="structb2_manifold_point_1ab3616990e7d1644deeeb691246094bfa" kindref="member" tooltip="usage depends on manifold type">localPoint</ref><sp/>=<sp/>circleB-&gt;<ref refid="classb2_circle_shape_1a190705618b2e65f636f1dc03c63640ff" kindref="member" tooltip="Position.">m_p</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1ab8021128e9792cc7391a8804ea02173d" kindref="member" tooltip="the points of contact">points</ref>[0].<ref refid="structb2_manifold_point_1afa7ec272b2b27abe129540f8fbe57fc5" kindref="member" tooltip="uniquely identifies a contact point between two shapes">id</ref>.<ref refid="unionb2_contact_i_d_1a04c04f8fdcb799b33552d01b3aa3f245" kindref="member" tooltip="Used to quickly compare contact ids.">key</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u2<sp/>&lt;=<sp/>0.0f)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b2DistanceSquared(cLocal,<sp/>v2)<sp/>&gt;<sp/>radius<sp/>*<sp/>radius)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1abf59ff6fa36bed34b0242ad54951a696" kindref="member" tooltip="the number of manifold points">pointCount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;type<sp/>=<sp/>b2Manifold::e_faceA;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1a3604e9fef2a03347c5649c71a9fd4c79" kindref="member" tooltip="not use for Type::e_points">localNormal</ref><sp/>=<sp/>cLocal<sp/>-<sp/>v2;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1a3604e9fef2a03347c5649c71a9fd4c79" kindref="member" tooltip="not use for Type::e_points">localNormal</ref>.<ref refid="structb2_vec2_1adda78c92f318fe53d8a53f9b5cfd8e41" kindref="member" tooltip="Convert this vector into a unit vector. Returns the length.">Normalize</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1a8825cea31b27dbbaf22c13c3070870d5" kindref="member" tooltip="usage depends on manifold type">localPoint</ref><sp/>=<sp/>v2;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1ab8021128e9792cc7391a8804ea02173d" kindref="member" tooltip="the points of contact">points</ref>[0].<ref refid="structb2_manifold_point_1ab3616990e7d1644deeeb691246094bfa" kindref="member" tooltip="usage depends on manifold type">localPoint</ref><sp/>=<sp/>circleB-&gt;<ref refid="classb2_circle_shape_1a190705618b2e65f636f1dc03c63640ff" kindref="member" tooltip="Position.">m_p</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1ab8021128e9792cc7391a8804ea02173d" kindref="member" tooltip="the points of contact">points</ref>[0].<ref refid="structb2_manifold_point_1afa7ec272b2b27abe129540f8fbe57fc5" kindref="member" tooltip="uniquely identifies a contact point between two shapes">id</ref>.<ref refid="unionb2_contact_i_d_1a04c04f8fdcb799b33552d01b3aa3f245" kindref="member" tooltip="Used to quickly compare contact ids.">key</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structb2_vec2" kindref="compound" tooltip="A 2D column vector.">b2Vec2</ref><sp/>faceCenter<sp/>=<sp/>0.5f<sp/>*<sp/>(v1<sp/>+<sp/>v2);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>separation<sp/>=<sp/>b2Dot(cLocal<sp/>-<sp/>faceCenter,<sp/>normals[vertIndex1]);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(separation<sp/>&gt;<sp/>radius)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1abf59ff6fa36bed34b0242ad54951a696" kindref="member" tooltip="the number of manifold points">pointCount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;type<sp/>=<sp/>b2Manifold::e_faceA;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1a3604e9fef2a03347c5649c71a9fd4c79" kindref="member" tooltip="not use for Type::e_points">localNormal</ref><sp/>=<sp/>normals[vertIndex1];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1a8825cea31b27dbbaf22c13c3070870d5" kindref="member" tooltip="usage depends on manifold type">localPoint</ref><sp/>=<sp/>faceCenter;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1ab8021128e9792cc7391a8804ea02173d" kindref="member" tooltip="the points of contact">points</ref>[0].<ref refid="structb2_manifold_point_1ab3616990e7d1644deeeb691246094bfa" kindref="member" tooltip="usage depends on manifold type">localPoint</ref><sp/>=<sp/>circleB-&gt;<ref refid="classb2_circle_shape_1a190705618b2e65f636f1dc03c63640ff" kindref="member" tooltip="Position.">m_p</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifold-&gt;<ref refid="structb2_manifold_1ab8021128e9792cc7391a8804ea02173d" kindref="member" tooltip="the points of contact">points</ref>[0].<ref refid="structb2_manifold_point_1afa7ec272b2b27abe129540f8fbe57fc5" kindref="member" tooltip="uniquely identifies a contact point between two shapes">id</ref>.<ref refid="unionb2_contact_i_d_1a04c04f8fdcb799b33552d01b3aa3f245" kindref="member" tooltip="Used to quickly compare contact ids.">key</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/pybox2d/Box2D/Collision/b2CollideCircle.cpp"/>
  </compounddef>
</doxygen>
